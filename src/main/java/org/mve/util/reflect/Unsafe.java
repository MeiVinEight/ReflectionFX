package org.mve.util.reflect;

import java.lang.reflect.Field;
import java.nio.ByteBuffer;
import java.security.ProtectionDomain;

public interface Unsafe
{
	byte getByte(long offset);
	byte getByte(Object obj, long offset);
	byte getByteVolatile(Object obj, long offset);
	void putByte(long offset, byte b);
	void putByte(Object obj, long offset, byte b);
	void putByteVolatile(Object obj, long offset, byte b);
	short getShort(long offset);
	short getShort(Object obj, long offset);
	short getShortVolatile(Object obj, long offset);
	void putShort(long offset, short s);
	void putShort(Object obj, long offset, short s);
	void putShortVolatile(Object obj, long offset, short s);
	int getInt(long offset);
	int getInt(Object obj, long offset);
	int getIntVolatile(Object obj, long offset);
	void putInt(long offset, int i);
	void putInt(Object obj, long offset, int i);
	void putIntVolatile(Object obj, long offset, int i);
	long getLong(long offset);
	long getLong(Object obj, long offset);
	long getLongVolatile(Object obj, long offset);
	void putLong(long offset, long l);
	void putLong(Object obj, long offset, long l);
	void putLongVolatile(Object obj, long offset, long l);
	float getFloat(long offset);
	float getFloat(Object obj, long offset);
	float getFloatVolatile(Object obj, long offset);
	void putFloat(long offset, float f);
	void putFloat(Object obj, long offset, float f);
	void putFloatVolatile(Object obj, long offset, float f);
	double getDouble(long offset);
	double getDouble(Object obj, long offset);
	double getDoubleVolatile(Object obj, long offset);
	void putDouble(long offset, double d);
	void putDouble(Object obj, long offset, double d);
	void putDoubleVolatile(Object obj, long offset, double d);
	boolean getBoolean(long offset);
	boolean getBoolean(Object obj, long offset);
	boolean getBooleanVolatile(Object obj, long offset);
	void putBoolean(long offset, boolean b);
	void putBoolean(Object obj, long offset, boolean b);
	void putBooleanVolatile(Object obj, long offset, boolean b);
	char getChar(long offset);
	char getChar(Object obj, long offset);
	char getCharVolatile(Object obj, long offset);
	void putChar(long offset, char c);
	void putChar(Object obj, long offset, char c);
	void putCharVolatile(Object obj, long offset, char c);
	Object getObject(Object obj, long offset);
	Object getReference(Object obj, long offset);
	Object getObjectVolatile(Object obj, long offset);
	Object getReferenceVolatile(Object obj, long offset);
	void putObject(Object obj, long offset, Object value);
	void putReference(Object obj, long offset, Object value);
	void putObjectVolatile(Object obj, long offset, Object value);
	void putReferenceVolatile(Object obj, long offset, Object value);
	long getAddress(long address);
	void putAddress(long address, long value);
	long allocateMemory(long length);
	long reallocateMemory(long address, long length);
	void setMemory(Object o, long offset, long bytes, byte value);
	void setMemory(long address, long bytes, byte value);
	void copyMemory(Object src, long secOff, Object dest, long destOff, long length);
	void copyMemory(long sec, long dest, long length);
	void freeMemory(long address);
	long staticFieldOffset(Field f);
	long objectFieldOffset(Field f);
	Object staticFieldBase(Field f);
	boolean shouldBeInitialized(Class<?> c);
	void ensureClassInitialized(Class<?> c);
	int arrayBaseOffset(Class<?> c);
	int arrayIndexScale(Class<?> c);
	int addressSize();
	int pageSize();
	Class<?> defineClass(String name, byte[] code, int offset, int length, ClassLoader loader, ProtectionDomain protectionDomain);
	Class<?> defineAnonymousClass(Class<?> hostClass, byte[] data, Object[] cpPatches);
	Object allocateInstance(Class<?> c) throws InstantiationException;
	void throwException(Throwable t);
	boolean compareAndSwapInt(Object obj, long offset, int expected, int value);
	boolean compareAndSetInt(Object obj, long offset, int expected, int value);
	boolean compareAndSwapLong(Object obj, long offset, long expected, long value);
	boolean compareAndSetLong(Object obj, long offset, long expected, long value);
	boolean compareAndSwapObject(Object obj, long offset, Object expected, Object value);
	boolean compareAndSetObject(Object obj, long offset, Object expected, Object value);
	boolean compareAndSetReference(Object obj, long offset, Object expected, Object value);
	void putOrderedInt(Object o, long offset, int x);
	void putIntRelease(Object o, long offset, int x);
	void putOrderedLong(Object o, long offset, long x);
	void putLongRelease(Object o, long offset, long x);
	void putOrderedObject(Object o, long offset, Object x);
	void putObjectRelease(Object o, long offset, Object x);
	void putReferenceRelease(Object o, long offset, Object x);
	void unpark(Object thread);
	void park(boolean isAbsolute, long time);
	int getLoadAverage(double[] loadavg, int nelems);
	int getAndAddInt(Object o, long offset, int delta);
	int getAndSetInt(Object o, long offset, int newValue);
	long getAndAddLong(Object o, long offset, long delta);
	long getAndSetLong(Object o, long offset, long newValue);
	Object getAndSetObject(Object o, long offset, Object newValue);
	Object getAndSetReference(Object o, long offset, Object newValue);
	void loadFence();
	void storeFence();
	void fullFence();
	void invokeCleaner(ByteBuffer directBuffer); // unusable
	byte getAndAddByte(Object o, long offset, byte delta);
	short getAndAddShort(Object o, long offset, short delta);
	byte getAndSetByte(Object o, long offset, byte newValue);
	short getAndSetShort(Object o, long offset, short newValue);
	Object getObjectOpaque(Object o, long offset);
	Object getReferenceOpaque(Object o, long offset);
	boolean getBooleanOpaque(Object o, long offset);
	void putBooleanOpaque(Object o, long offset, boolean x);
	byte getByteOpaque(Object o, long offset);
	void putByteOpaque(Object o, long offset, byte x);
	short getShortOpaque(Object o, long offset);
	void putShortOpaque(Object o, long offset, short x);
	char getCharOpaque(Object o, long offset);
	void putCharOpaque(Object o, long offset, char x);
	int getIntOpaque(Object o, long offset);
	void putIntOpaque(Object o, long offset, int x);
	long getLongOpaque(Object o, long offset);
	void putLongOpaque(Object o, long offset, long x);
	float getFloatOpaque(Object o, long offset);
	void putFloatOpaque(Object o, long offset, float x);
	double getDoubleOpaque(Object o, long offset);
	void putObjectOpaque(Object o, long offset, Object x);
	void putReferenceOpaque(Object o, long offset, Object x);
	void putDoubleOpaque(Object o, long offset, double x);
	Object getObjectAcquire(Object o, long offset);
	Object getReferenceAcquire(Object o, long offset);
	boolean getBooleanAcquire(Object o, long offset);
	void putBooleanRelease(Object o, long offset, boolean x);
	byte getByteAcquire(Object o, long offset);
	void putByteRelease(Object o, long offset, byte x);
	short getShortAcquire(Object o, long offset);
	void putShortRelease(Object o, long offset, short x);
	char getCharAcquire(Object o, long offset);
	void putCharRelease(Object o, long offset, char x);
	int getIntAcquire(Object o, long offset);
	long getLongAcquire(Object o, long offset);
	float getFloatAcquire(Object o, long offset);
	void putFloatRelease(Object o, long offset, float x);
	double getDoubleAcquire(Object o, long offset);
	void putDoubleRelease(Object o, long offset, double x);
	short getShortUnaligned(Object o, long offset);
	short getShortUnaligned(Object o, long offset, boolean bigEndian);
	void putShortUnaligned(Object o, long offset, short x);
	void putShortUnaligned(Object o, long offset, short x, boolean bigEndian);
	char getCharUnaligned(Object o, long offset);
	char getCharUnaligned(Object o, long offset, boolean bigEndian);
	void putCharUnaligned(Object o, long offset, char x);
	void putCharUnaligned(Object o, long offset, char x, boolean bigEndian);
	int getIntUnaligned(Object o, long offset);
	int getIntUnaligned(Object o, long offset, boolean bigEndian);
	void putIntUnaligned(Object o, long offset, int x);
	void putIntUnaligned(Object o, long offset, int x, boolean bigEndian);
	long getLongUnaligned(Object o, long offset);
	long getLongUnaligned(Object o, long offset, boolean bigEndian);
	void putLongUnaligned(Object o, long offset, long x, boolean bigEndian);
	void putLongUnaligned(Object o, long offset, long x);
	Object compareAndExchangeObject(Object o, long offset, Object expected, Object x);
	Object compareAndExchangeReference(Object o, long offset, Object expected, Object x);
	Object compareAndExchangeObjectAcquire(Object o, long offset, Object expected, Object x);
	Object compareAndExchangeReferenceAcquire(Object o, long offset, Object expected, Object x);
	Object compareAndExchangeObjectRelease(Object o, long offset, Object expected, Object x);
	Object compareAndExchangeReferenceRelease(Object o, long offset, Object expected, Object x);
	long compareAndExchangeLong(Object o, long offset, long expected, long x);
	long compareAndExchangeLongAcquire(Object o, long offset, long expected, long x);
	long compareAndExchangeLongRelease(Object o, long offset, long expected, long x);
	int compareAndExchangeInt(Object o, long offset, int expected, int x);
	int compareAndExchangeIntAcquire(Object o, long offset, int expected, int x);
	int compareAndExchangeIntRelease(Object o, long offset, int expected, int x);
	boolean compareAndSetByte(Object o, long offset, byte expected, byte x);
	byte compareAndExchangeByte(Object o, long offset, byte expected, byte x);
	byte compareAndExchangeByteAcquire(Object o, long offset, byte expected, byte x);
	byte compareAndExchangeByteRelease(Object o, long offset, byte expected, byte x);
	boolean compareAndSetShort(Object o, long offset, short expected, short x);
	short compareAndExchangeShort(Object o, long offset, short expected, short x);
	short compareAndExchangeShortAcquire(Object o, long offset, short expected, short x);
	short compareAndExchangeShortRelease(Object o, long offset, short expected, short x);
	boolean compareAndSetChar(Object o, long offset, char expected, char x);
	char compareAndExchangeChar(Object o, long offset, char expected, char x);
	char compareAndExchangeCharAcquire(Object o, long offset, char expected, char x);
	char compareAndExchangeCharRelease(Object o, long offset, char expected, char x);
	boolean compareAndSetFloat(Object o, long offset, float expected, float x);
	float compareAndExchangeFloat(Object o, long offset, float expected, float x);
	float compareAndExchangeFloatAcquire(Object o, long offset, float expected, float x);
	float compareAndExchangeFloatRelease(Object o, long offset, float expected, float x);
	boolean compareAndSetBoolean(Object o, long offset, boolean expected, boolean x);
	boolean compareAndExchangeBoolean(Object o, long offset, boolean expected, boolean x);
	boolean compareAndExchangeBooleanAcquire(Object o, long offset, boolean expected, boolean x);
	boolean compareAndExchangeBooleanRelease(Object o, long offset, boolean expected, boolean x);
	boolean compareAndSetDouble(Object o, long offset, double expected, double x);
	double compareAndExchangeDouble(Object o, long offset, double expected, double x);
	double compareAndExchangeDoubleAcquire(Object o, long offset, double expected, double x);
	double compareAndExchangeDoubleRelease(Object o, long offset, double expected, double x);
	void loadLoadFence();
	void storeStoreFence();
	boolean unalignedAccess();
	long getAddress(Object o, long offset);
	void putAddress(Object o, long offset, long x);
	Object getUncompressedObject(long address);
	void copySwapMemory(Object srcBase, long srcOffset, Object destBase, long destOffset, long bytes, long elemSize);
	void copySwapMemory(long srcAddress, long destAddress, long bytes, long elemSize);
	Class<?> defineClass0(String name, byte[] b, int off, int len, ClassLoader loader, ProtectionDomain protectionDomain);
	Object allocateUninitializedArray(Class<?> componentType, int length);
	boolean isBigEndian();
	boolean weakCompareAndSetObject(Object o, long offset, Object expected, Object x);
	boolean weakCompareAndSetReference(Object o, long offset, Object expected, Object x);
	boolean weakCompareAndSetObjectPlain(Object o, long offset, Object expected, Object x);
	boolean weakCompareAndSetReferencePlain(Object o, long offset, Object expected, Object x);
	boolean weakCompareAndSetObjectAcquire(Object o, long offset, Object expected, Object x);
	boolean weakCompareAndSetReferenceAcquire(Object o, long offset, Object expected, Object x);
	boolean weakCompareAndSetObjectRelease(Object o, long offset, Object expected, Object x);
	boolean weakCompareAndSetReferenceRelease(Object o, long offset, Object expected, Object x);
	boolean weakCompareAndSetByte(Object o, long offset, byte expected, byte x);
	boolean weakCompareAndSetBytePlain(Object o, long offset, byte expected, byte x);
	boolean weakCompareAndSetByteAcquire(Object o, long offset, byte expected, byte x);
	boolean weakCompareAndSetByteRelease(Object o, long offset, byte expected, byte x);
	boolean weakCompareAndSetShort(Object o, long offset, short expected, short x);
	boolean weakCompareAndSetShortPlain(Object o, long offset, short expected, short x);
	boolean weakCompareAndSetShortAcquire(Object o, long offset, short expected, short x);
	boolean weakCompareAndSetShortRelease(Object o, long offset, short expected, short x);
	boolean weakCompareAndSetInt(Object o, long offset, int expected, int x);
	boolean weakCompareAndSetIntPlain(Object o, long offset, int expected, int x);
	boolean weakCompareAndSetIntAcquire(Object o, long offset, int expected, int x);
	boolean weakCompareAndSetIntRelease(Object o, long offset, int expected, int x);
	boolean weakCompareAndSetLong(Object o, long offset, long expected, long x);
	boolean weakCompareAndSetLongPlain(Object o, long offset, long expected, long x);
	boolean weakCompareAndSetLongAcquire(Object o, long offset, long expected, long x);
	boolean weakCompareAndSetLongRelease(Object o, long offset, long expected, long x);
	boolean weakCompareAndSetFloat(Object o, long offset, float expected, float x);
	boolean weakCompareAndSetFloatPlain(Object o, long offset, float expected, float x);
	boolean weakCompareAndSetFloatAcquire(Object o, long offset, float expected, float x);
	boolean weakCompareAndSetFloatRelease(Object o, long offset, float expected, float x);
	boolean weakCompareAndSetDouble(Object o, long offset, double expected, double x);
	boolean weakCompareAndSetDoublePlain(Object o, long offset, double expected, double x);
	boolean weakCompareAndSetDoubleAcquire(Object o, long offset, double expected, double x);
	boolean weakCompareAndSetDoubleRelease(Object o, long offset, double expected, double x);
	boolean weakCompareAndSetBoolean(Object o, long offset, boolean expected, boolean x);
	boolean weakCompareAndSetBooleanPlain(Object o, long offset, boolean expected, boolean x);
	boolean weakCompareAndSetBooleanAcquire(Object o, long offset, boolean expected, boolean x);
	boolean weakCompareAndSetBooleanRelease(Object o, long offset, boolean expected, boolean x);
	boolean weakCompareAndSetChar(Object o, long offset, char expected, char x);
	boolean weakCompareAndSetCharPlain(Object o, long offset, char expected, char x);
	boolean weakCompareAndSetCharAcquire(Object o, long offset, char expected, char x);
	boolean weakCompareAndSetCharRelease(Object o, long offset, char expected, char x);
	char getAndAddChar(Object o, long offset, char delta);
	float getAndAddFloat(Object o, long offset, float delta);
	double getAndAddDouble(Object o, long offset, double delta);
	boolean getAndSetBoolean(Object o, long offset, boolean newValue);
	char getAndSetChar(Object o, long offset, char newValue);
	float getAndSetFloat(Object o, long offset, float newValue);
	double getAndSetDouble(Object o, long offset, double newValue);
	byte getAndAddByteAcquire(Object o, long offset, byte delta);
	byte getAndAddByteRelease(Object o, long offset, byte delta);
	short getAndAddShortAcquire(Object o, long offset, short delta);
	short getAndAddShortRelease(Object o, long offset, short delta);
	int getAndAddIntAcquire(Object o, long offset, int delta);
	int getAndAddIntRelease(Object o, long offset, int delta);
	long getAndAddLongAcquire(Object o, long offset, long delta);
	long getAndAddLongRelease(Object o, long offset, long delta);
	float getAndAddFloatAcquire(Object o, long offset, float delta);
	float getAndAddFloatRelease(Object o, long offset, float delta);
	double getAndAddDoubleAcquire(Object o, long offset, double delta);
	double getAndAddDoubleRelease(Object o, long offset, double delta);
	char getAndAddCharAcquire(Object o, long offset, char delta);
	char getAndAddCharRelease(Object o, long offset, char delta);
	Object getAndSetObjectAcquire(Object o, long offset, Object newValue);
	Object getAndSetObjectRelease(Object o, long offset, Object newValue);
	Object getAndSetReferenceAcquire(Object o, long offset, Object newValue);
	Object getAndSetReferenceRelease(Object o, long offset, Object newValue);
	byte getAndSetByteAcquire(Object o, long offset, byte newValue);
	byte getAndSetByteRelease(Object o, long offset, byte newValue);
	short getAndSetShortAcquire(Object o, long offset, short newValue);
	short getAndSetShortRelease(Object o, long offset, short newValue);
	int getAndSetIntAcquire(Object o, long offset, int newValue);
	int getAndSetIntRelease(Object o, long offset, int newValue);
	long getAndSetLongAcquire(Object o, long offset, long newValue);
	long getAndSetLongRelease(Object o, long offset, long newValue);
	float getAndSetFloatAcquire(Object o, long offset, float newValue);
	float getAndSetFloatRelease(Object o, long offset, float newValue);
	double getAndSetDoubleAcquire(Object o, long offset, double newValue);
	double getAndSetDoubleRelease(Object o, long offset, double newValue);
	boolean getAndSetBooleanAcquire(Object o, long offset, boolean newValue);
	boolean getAndSetBooleanRelease(Object o, long offset, boolean newValue);
	char getAndSetCharAcquire(Object o, long offset, char newValue);
	char getAndSetCharRelease(Object o, long offset, char newValue);
	byte getAndBitwiseOrByte(Object o, long offset, byte mask);
	byte getAndBitwiseXorByte(Object o, long offset, byte mask);
	byte getAndBitwiseAndByte(Object o, long offset, byte mask);
	byte getAndBitwiseOrByteAcquire(Object o, long offset, byte mask);
	byte getAndBitwiseXorByteAcquire(Object o, long offset, byte mask);
	byte getAndBitwiseAndByteAcquire(Object o, long offset, byte mask);
	byte getAndBitwiseOrByteRelease(Object o, long offset, byte mask);
	byte getAndBitwiseXorByteRelease(Object o, long offset, byte mask);
	byte getAndBitwiseAndByteRelease(Object o, long offset, byte mask);
	short getAndBitwiseOrShort(Object o, long offset, short mask);
	short getAndBitwiseXorShort(Object o, long offset, short mask);
	short getAndBitwiseAndShort(Object o, long offset, short mask);
	short getAndBitwiseOrShortAcquire(Object o, long offset, short mask);
	short getAndBitwiseXorShortAcquire(Object o, long offset, short mask);
	short getAndBitwiseAndShortAcquire(Object o, long offset, short mask);
	short getAndBitwiseOrShortRelease(Object o, long offset, short mask);
	short getAndBitwiseXorShortRelease(Object o, long offset, short mask);
	short getAndBitwiseAndShortRelease(Object o, long offset, short mask);
	int getAndBitwiseOrInt(Object o, long offset, int mask);
	int getAndBitwiseXorInt(Object o, long offset, int mask);
	int getAndBitwiseAndInt(Object o, long offset, int mask);
	int getAndBitwiseOrIntAcquire(Object o, long offset, int mask);
	int getAndBitwiseXorIntAcquire(Object o, long offset, int mask);
	int getAndBitwiseAndIntAcquire(Object o, long offset, int mask);
	int getAndBitwiseOrIntRelease(Object o, long offset, int mask);
	int getAndBitwiseXorIntRelease(Object o, long offset, int mask);
	int getAndBitwiseAndIntRelease(Object o, long offset, int mask);
	long getAndBitwiseOrLong(Object o, long offset, long mask);
	long getAndBitwiseXorLong(Object o, long offset, long mask);
	long getAndBitwiseAndLong(Object o, long offset, long mask);
	long getAndBitwiseOrLongAcquire(Object o, long offset, long mask);
	long getAndBitwiseXorLongAcquire(Object o, long offset, long mask);
	long getAndBitwiseAndLongAcquire(Object o, long offset, long mask);
	long getAndBitwiseOrLongRelease(Object o, long offset, long mask);
	long getAndBitwiseXorLongRelease(Object o, long offset, long mask);
	long getAndBitwiseAndLongRelease(Object o, long offset, long mask);
	boolean getAndBitwiseOrBoolean(Object o, long offset, boolean mask);
	boolean getAndBitwiseXorBoolean(Object o, long offset, boolean mask);
	boolean getAndBitwiseAndBoolean(Object o, long offset, boolean mask);
	boolean getAndBitwiseOrBooleanAcquire(Object o, long offset, boolean mask);
	boolean getAndBitwiseXorBooleanAcquire(Object o, long offset, boolean mask);
	boolean getAndBitwiseAndBooleanAcquire(Object o, long offset, boolean mask);
	boolean getAndBitwiseOrBooleanRelease(Object o, long offset, boolean mask);
	boolean getAndBitwiseXorBooleanRelease(Object o, long offset, boolean mask);
	boolean getAndBitwiseAndBooleanRelease(Object o, long offset, boolean mask);
	char getAndBitwiseOrChar(Object o, long offset, char mask);
	char getAndBitwiseXorChar(Object o, long offset, char mask);
	char getAndBitwiseAndChar(Object o, long offset, char mask);
	char getAndBitwiseOrCharAcquire(Object o, long offset, char mask);
	char getAndBitwiseXorCharAcquire(Object o, long offset, char mask);
	char getAndBitwiseAndCharAcquire(Object o, long offset, char mask);
	char getAndBitwiseOrCharRelease(Object o, long offset, char mask);
	char getAndBitwiseXorCharRelease(Object o, long offset, char mask);
	char getAndBitwiseAndCharRelease(Object o, long offset, char mask);
	long objectFieldOffset(Class<?> c, String name);
}
